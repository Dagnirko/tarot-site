import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';
import { useTheme } from '@/contexts/ThemeContext';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { toast } from 'sonner';
import { ArrowLeft, Save, Settings } from 'lucide-react';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';

const API = `${process.env.REACT_APP_BACKEND_URL}/api`;

const AdminSettings = () => {
  const { refreshSettings } = useTheme();
  const [loading, setLoading] = useState(false);
  const [settingsData, setSettingsData] = useState({
    theme: 'light',
    site_title: '–¢–∞—Ä–æ–ª–æ–≥-–ê—Å—Ç—Ä–æ–ª–æ–≥',
    site_description: '',
    admin_email: '',
  });

  useEffect(() => {
    fetchSettings();
  }, []);

  const fetchSettings = async () => {
    try {
      const response = await axios.get(`${API}/settings`);
      setSettingsData(response.data);
    } catch (error) {
      console.error('Failed to fetch settings:', error);
    }
  };

  const handleSave = async () => {
    setLoading(true);
    try {
      await axios.put(`${API}/admin/settings`, settingsData);
      await refreshSettings();
      toast.success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen px-6 py-12">
      <div className="container mx-auto max-w-4xl">
        <div className="flex justify-between items-center mb-8">
          <div className="flex items-center gap-4">
            <Link to="/admin">
              <Button variant="outline" size="icon">
                <ArrowLeft size={18} />
              </Button>
            </Link>
            <h1 className="text-4xl font-bold" style={{ color: 'var(--text-primary)' }}>
              <Settings className="inline mr-2" size={36} />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </h1>
          </div>
          <Button onClick={handleSave} disabled={loading} className="btn-primary" data-testid="save-settings-button">
            <Save className="mr-2" size={18} />
            {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
          </Button>
        </div>

        <div className="space-y-6">
          <Card className="glass-card">
            <CardHeader>
              <CardTitle style={{ color: 'var(--text-primary)' }}>–û—Å–Ω–æ–≤–Ω—ã–µ –ù–∞—Å—Ç—Ä–æ–π–∫–∏</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <label className="block mb-2 font-medium" style={{ color: 'var(--text-primary)' }}>
                  –ù–∞–∑–≤–∞–Ω–∏–µ –°–∞–π—Ç–∞
                </label>
                <Input
                  data-testid="site-title-input"
                  value={settingsData.site_title}
                  onChange={(e) => setSettingsData({ ...settingsData, site_title: e.target.value })}
                />
              </div>
              <div>
                <label className="block mb-2 font-medium" style={{ color: 'var(--text-primary)' }}>
                  –û–ø–∏—Å–∞–Ω–∏–µ –°–∞–π—Ç–∞
                </label>
                <Textarea
                  data-testid="site-description-textarea"
                  value={settingsData.site_description}
                  onChange={(e) => setSettingsData({ ...settingsData, site_description: e.target.value })}
                  rows={3}
                />
              </div>
              <div>
                <label className="block mb-2 font-medium" style={{ color: 'var(--text-primary)' }}>
                  Email –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
                </label>
                <Input
                  data-testid="admin-email-input"
                  type="email"
                  value={settingsData.admin_email || ''}
                  onChange={(e) => setSettingsData({ ...settingsData, admin_email: e.target.value })}
                  placeholder="admin@example.com"
                />
              </div>
            </CardContent>
          </Card>

          <Card className="glass-card">
            <CardHeader>
              <CardTitle style={{ color: 'var(--text-primary)' }}>–¢–µ–º–∞ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</CardTitle>
            </CardHeader>
            <CardContent>
              <label className="block mb-2 font-medium" style={{ color: 'var(--text-primary)' }}>
                –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
              </label>
              <Select value={settingsData.theme} onValueChange={(value) => setSettingsData({ ...settingsData, theme: value })}>
                <SelectTrigger data-testid="theme-select">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <div className="px-2 py-1 text-xs font-semibold text-gray-500">–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã</div>
                  <SelectItem value="light">‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è</SelectItem>
                  <SelectItem value="mystical">üåô –ú–∏—Å—Ç–∏—á–µ—Å–∫–∞—è</SelectItem>
                  
                  <div className="px-2 py-1 text-xs font-semibold text-gray-500 mt-2">–í—Ä–µ–º–µ–Ω–∞ –≥–æ–¥–∞</div>
                  <SelectItem value="winter">‚ùÑÔ∏è –ó–∏–º–∞</SelectItem>
                  <SelectItem value="spring">üå∏ –í–µ—Å–Ω–∞</SelectItem>
                  <SelectItem value="summer">‚òÄÔ∏è –õ–µ—Ç–æ</SelectItem>
                  <SelectItem value="autumn">üçÇ –û—Å–µ–Ω—å</SelectItem>
                  
                  <div className="px-2 py-1 text-xs font-semibold text-gray-500 mt-2">–ü–ª–∞–Ω–µ—Ç—ã</div>
                  <SelectItem value="mercury">‚òø –ú–µ—Ä–∫—É—Ä–∏–π</SelectItem>
                  <SelectItem value="venus">‚ôÄ –í–µ–Ω–µ—Ä–∞</SelectItem>
                  <SelectItem value="mars">‚ôÇ –ú–∞—Ä—Å</SelectItem>
                  <SelectItem value="jupiter">‚ôÉ –Æ–ø–∏—Ç–µ—Ä</SelectItem>
                  <SelectItem value="saturn">‚ôÑ –°–∞—Ç—É—Ä–Ω</SelectItem>
                  <SelectItem value="uranus">‚ôÖ –£—Ä–∞–Ω</SelectItem>
                  <SelectItem value="neptune">‚ôÜ –ù–µ–ø—Ç—É–Ω</SelectItem>
                  <SelectItem value="pluto">‚ôá –ü–ª—É—Ç–æ–Ω</SelectItem>
                </SelectContent>
              </Select>
              <p className="text-sm mt-2" style={{ color: 'var(--text-secondary)' }}>
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å —Ç–µ–º—ã —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –≤ —à–∞–ø–∫–µ —Å–∞–π—Ç–∞.
              </p>
            </CardContent>
          </Card>

          <Card className="glass-card">
            <CardHeader>
              <CardTitle style={{ color: 'var(--text-primary)' }}>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Email –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</CardTitle>
            </CardHeader>
            <CardContent>
              <p style={{ color: 'var(--text-secondary)' }} className="mb-3">
                –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å SendGrid API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª:
              </p>
              <pre className="p-3 rounded text-sm" style={{ background: 'var(--bg-secondary)', color: 'var(--text-secondary)' }}>
                SENDGRID_API_KEY=your_sendgrid_api_key{`\n`}
                SENDER_EMAIL=your_verified_email@domain.com
              </pre>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default AdminSettings;